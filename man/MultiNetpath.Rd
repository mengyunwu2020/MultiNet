% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MultiNetpath.R
\name{MultiNetpath}
\alias{MultiNetpath}
\title{Estimation of multiple networks with common structures in heterogeneous subgroups (MultiNet) along path.}
\usage{
MultiNetpath(
  data,
  Kseq,
  lambda.lasso,
  lambda.similar,
  initial.selection = "K-means",
  initialize,
  eps = 0.001,
  maxiter = 100,
  trace.inter,
  tau.theta = 0.001,
  refit = TRUE,
  tunoption = "pathwise",
  seed = 1
)
}
\arguments{
\item{data}{An n x p data matrix.}

\item{Kseq}{Vector of number of clusters.}

\item{lambda.lasso}{A vector of non-negative regularization parameters for the lasso. It should be decreasing from large to small.}

\item{lambda.similar}{A vector of non-negative regularization parameters for the group lasso. It should be decreasing from large to small.}

\item{initial.selection}{The method of initialization. Can be "k-means". Otherwise, it must be initialized with the initialize parameter.}

\item{initialize}{A list, which includes the initialization values of Theta, Mu and prob.}

\item{eps}{Tolerance for the EM algorithm. The default value is 1e-3.}

\item{maxiter}{The maximum number of iterations.}

\item{trace.inter}{Whether to track progress in the main function.}

\item{tau.theta}{Threshold parameter for precision matrix.}

\item{refit}{Whether to perform the refit process after the EM algorithm converges.}

\item{tunoption}{One character. If tunoption=='pathwise', it means we used a path optimization scheme.}

\item{seed}{The seed used in the initialization step.}
}
\value{
A list "resultall" with each element including:
\item{K}{Subgroups' number.}
\item{Mu_hat.list}{List of estimated subgroups' means.}
\item{Theta_hat.list}{List of estimated subgroups' precision matrices.}
\item{prob.list}{List of estimated subgroups' prior probabilities.}
\item{member.list}{List of estimated memberships of each subject.}
\item{L.mat.list}{List of estimated probabilities that each subject belongs to each subgroup.}
}
\description{
Estimation of multiple networks with common structures in heterogeneous subgroups (MultiNet) along path.
}
\examples{
n <- 200              # The sample size of each subgroup
p <- 100              # The dimension of the precision matrix
K0 <- 3
set.seed(1)
mue <- .8
nonnum <- 2
mu01 <- c(rep(mue,nonnum),rep(-mue,nonnum),rep(-0,p-2*nonnum))
mu02 <- c(rep(mue,2*nonnum),rep(-0,p-2*nonnum))
mu03 <- c(rep(-mue,2*nonnum),rep(-0,p-2*nonnum))
num.differ=8
N <- rep(n,K0)
A.list <- Power.law.network(p,s=10,umin=0.3,umax=0.6,num.differ=num.differ)
Theta01 <- A.list$A1
Theta02 <- A.list$A2
Theta03 <- A.list$A3
sigma01 <- solve(Theta01)
sigma02 <- solve(Theta02)
sigma03 <- solve(Theta03)
Mu0.list <- list(mu01,mu02,mu03)
Sigma0.list <- list(sigma01,sigma02,sigma03)
Theta0.list <- list(Theta01,Theta02,Theta03)
set.seed(1)
whole.data <- generate.data(N,Mu0.list,Theta0.list,Sigma0.list)
lambda <- list()
opt=sqrt(log(p-1))/sqrt(nrow(whole.data$data)*K0)
opt2=sqrt(log((p-1)*K0))/sqrt(nrow(whole.data$data)*K0)
lambda$lambda.similar=seq(0.2*opt,0.01*opt,length.out=10)
lambda$lambda.lasso=seq(0.2*opt2,0.18*opt2,length.out=3)
res<-MultiNetpath(whole.data$data,K0,lambda$lambda.lasso,lambda$lambda.similar,trace.inter= FALSE)
}
